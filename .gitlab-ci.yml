variables:
  # Gitlab namespace with branch name: "namespace-branchname"
  # NAMESPACE: ${CI_PROJECT_NAMESPACE}-${CI_COMMIT_REF_SLUG}
  NAMESPACE: better-website
  DOCKER_IMAGE_URL: asksven/better-website

stages:
  - generate
  - build
  - deploy
  - status
  - cleanup

generate hugo:
  stage: generate
  image: jojomi/hugo:0.44
  tags:
  - asksven-homelab-dev  
  script:
  - mkdir public && cd src && hugo --cleanDestinationDir --destination ../public/
  artifacts:
    paths:
    - public

# build container:
#   stage: build
#   image: r.j3ss.co/img
#   tags:
#     - asksven-homelab-dev
#   script:
#     - echo "$DOCKER_REGISTRY_PASSWORD" | img login -u "$DOCKER_REGISTRY_USER" --password-stdin ${DOCKER_REGISTRY}
#     - img pull ${DOCKER_REGISTRY}/${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG} || true
#     - img build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_URL}:${CI_BUILD_REF} .
#     - echo pushing ${DOCKER_REGISTRY}/${DOCKER_IMAGE_URL}:${CI_BUILD_REF} 
#     - img push ${DOCKER_REGISTRY}/${DOCKER_IMAGE_URL}:${CI_BUILD_REF}
#     - img tag ${DOCKER_REGISTRY}/${DOCKER_IMAGE_URL}:${CI_BUILD_REF} ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG}
#     - echo pushing ${DOCKER_REGISTRY}/${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG} 
#     - img push ${DOCKER_REGISTRY}/${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG}

 build container:
   stage: build
   image: docker:18.06.1-ce
   tags:
     - asksven-homelab-dev
   services:
     - docker:18.06.1-ce-dind
   variables:
     DOCKER_HOST: tcp://localhost:2375
     DOCKER_DRIVER: overlay2
   script:
     - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u ${DOCKER_REGISTRY_USER} ${DOCKER_REGISTRY}
     - docker pull ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG} || true
     - docker build --cache-from ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG} -t ${DOCKER_IMAGE_URL}:${CI_BUILD_REF} .
     - echo pushing ${DOCKER_IMAGE_URL}:${CI_BUILD_REF} 
     - docker push ${DOCKER_IMAGE_URL}:${CI_BUILD_REF}
     - docker tag ${DOCKER_IMAGE_URL}:${CI_BUILD_REF} ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG}
     - echo pushing ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG} 
     - docker push ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG}

.deploy_template: &deploy_template
  stage: deploy
  image: ksiebel/docker-kubernetes-deploy
  script:
  - cd ops && ./deploy.sh
  artifacts:
    paths:
    - ops

# .deploy_template_azure: &deploy_template_azure
#   <<: *deploy_template
#   tags:
#   - monitoring-poc-cluster
#   variables:
#     DEPLOY_ENV: azure
#   only:
#   - master@asksven/prometheus-deployment

.deploy_template_dev: &deploy_template_dev
  <<: *deploy_template
  tags:
    - asksven-homelab-dev
  variables:
    DEPLOY_ENV: development
  only:
  - master


# # stable to production:
# #   <<: *deploy_template_production

# # stable to staging:
# #   <<: *deploy_template_staging

# stable to dev:
#   <<: *deploy_template_dev


.status_template: &status_template
  stage: status
  image: ksiebel/docker-kubernetes-deploy
  script:
  - kubectl describe pods,svc,deployment,ing --namespace=${NAMESPACE}

status namespace dev:
  <<: *status_template
  only:
  - master


.cleanup_template: &cleanup_template
  stage: status
  image: ksiebel/docker-kubernetes-deploy
  script:
  - kubectl delete ${NAMESPACE}
  when: manual

cleanup dev:
  <<: *cleanup_template
  only:
  - master
  